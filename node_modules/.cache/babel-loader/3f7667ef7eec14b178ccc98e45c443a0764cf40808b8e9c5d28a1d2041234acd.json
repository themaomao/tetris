{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\n\n// Custom hook by Dan Abramov\nexport const useInterval = (callback, delay) => {\n  _s();\n  const savedCallback = useRef();\n\n  // Remember the latest callback\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n};\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");","map":{"version":3,"names":["useEffect","useRef","useInterval","callback","delay","_s","savedCallback","current","tick","id","setInterval","clearInterval"],"sources":["/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/src/Hooks/useInterval.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\n// Custom hook by Dan Abramov\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAEzC;AACA,OAAO,MAAMC,WAAW,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAAAC,EAAA;EAC9C,MAAMC,aAAa,GAAGL,MAAM,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACdM,aAAa,CAACC,OAAO,GAAGJ,QAAQ;EAClC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAH,SAAS,CAAC,MAAM;IACd,SAASQ,IAAIA,CAAA,EAAG;MACdF,aAAa,CAACC,OAAO,CAAC,CAAC;IACzB;IACA,IAAIH,KAAK,KAAK,IAAI,EAAE;MAClB,MAAMK,EAAE,GAAGC,WAAW,CAACF,IAAI,EAAEJ,KAAK,CAAC;MACnC,OAAO,MAAM;QACXO,aAAa,CAACF,EAAE,CAAC;MACnB,CAAC;IACH;EACF,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;AACb,CAAC;AAACC,EAAA,CApBWH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}