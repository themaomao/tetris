{"ast":null,"code":"import _toConsumableArray from\"/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{defaultCell}from\"../Business/Cell\";import{movePlayer}from\"../Business/PlayerController\";import{transferToBoard}from\"../Business/Tetrominoes\";export var buildBoard=function buildBoard(_ref){var rows=_ref.rows,columns=_ref.columns;var builtRows=Array.from({length:rows},function(){return Array.from({length:columns},function(){return _objectSpread({},defaultCell);});});return{rows:builtRows,size:{rows:rows,columns:columns}};};var findDropPosition=function findDropPosition(_ref2){var board=_ref2.board,position=_ref2.position,shape=_ref2.shape;var max=board.size.rows-position.row+1;var row=0;for(var i=0;i<max;i++){var delta={row:i,column:0};var result=movePlayer({delta:delta,position:position,shape:shape,board:board});var collided=result.collided;if(collided){break;}row=position.row+i;}return _objectSpread(_objectSpread({},position),{},{row:row});};export var nextBoard=function nextBoard(_ref3){var board=_ref3.board,player=_ref3.player,resetPlayer=_ref3.resetPlayer,addLinesCleared=_ref3.addLinesCleared;var tetromino=player.tetromino,position=player.position;// Copy and clear spaces used by pieces that\n// hadn't collided and occupied spaces permanently\nvar rows=board.rows.map(function(row){return row.map(function(cell){return cell.occupied?cell:_objectSpread({},defaultCell);});});// Drop position\nvar dropPosition=findDropPosition({board:board,position:position,shape:tetromino.shape});// Place ghost\nvar className=\"\".concat(tetromino.className,\" \").concat(player.isFastDropping?\"\":\"ghost\");rows=transferToBoard({className:className,isOccupied:player.isFastDropping,position:dropPosition,rows:rows,shape:tetromino.shape});// Place the piece.\n// If it collided, mark the board cells as collided\nif(!player.isFastDropping){rows=transferToBoard({className:tetromino.className,isOccupied:player.collided,position:position,rows:rows,shape:tetromino.shape});}// Check for cleared lines\nvar blankRow=rows[0].map(function(_){return _objectSpread({},defaultCell);});var linesCleared=0;rows=rows.reduce(function(acc,row){if(row.every(function(column){return column.occupied;})){linesCleared++;acc.unshift(_toConsumableArray(blankRow));}else{acc.push(row);}return acc;},[]);if(linesCleared>0){addLinesCleared(linesCleared);}// If we collided, reset the player!\nif(player.collided||player.isFastDropping){resetPlayer();}// Return the next board\nreturn{rows:rows,size:_objectSpread({},board.size)};};export var hasCollision=function hasCollision(_ref4){var board=_ref4.board,position=_ref4.position,shape=_ref4.shape;for(var y=0;y<shape.length;y++){var row=y+position.row;for(var x=0;x<shape[y].length;x++){if(shape[y][x]){var column=x+position.column;if(board.rows[row]&&board.rows[row][column]&&board.rows[row][column].occupied){return true;}}}}return false;};export var isWithinBoard=function isWithinBoard(_ref5){var board=_ref5.board,position=_ref5.position,shape=_ref5.shape;for(var y=0;y<shape.length;y++){var row=y+position.row;for(var x=0;x<shape[y].length;x++){if(shape[y][x]){var column=x+position.column;var isValidPosition=board.rows[row]&&board.rows[row][column];if(!isValidPosition)return false;}}}return true;};","map":{"version":3,"names":["defaultCell","movePlayer","transferToBoard","buildBoard","_ref","rows","columns","builtRows","Array","from","length","_objectSpread","size","findDropPosition","_ref2","board","position","shape","max","row","i","delta","column","result","collided","nextBoard","_ref3","player","resetPlayer","addLinesCleared","tetromino","map","cell","occupied","dropPosition","className","concat","isFastDropping","isOccupied","blankRow","_","linesCleared","reduce","acc","every","unshift","_toConsumableArray","push","hasCollision","_ref4","y","x","isWithinBoard","_ref5","isValidPosition"],"sources":["/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/src/Business/Board.js"],"sourcesContent":["import { defaultCell } from \"../Business/Cell\";\nimport { movePlayer } from \"../Business/PlayerController\";\nimport { transferToBoard } from \"../Business/Tetrominoes\";\n\nexport const buildBoard = ({ rows, columns }) => {\n  const builtRows = Array.from({ length: rows }, () =>\n    Array.from({ length: columns }, () => ({ ...defaultCell }))\n  );\n\n  return {\n    rows: builtRows,\n    size: { rows, columns }\n  };\n};\n\nconst findDropPosition = ({ board, position, shape }) => {\n  let max = board.size.rows - position.row + 1;\n  let row = 0;\n\n  for (let i = 0; i < max; i++) {\n    const delta = { row: i, column: 0 };\n    const result = movePlayer({ delta, position, shape, board });\n    const { collided } = result;\n\n    if (collided) {\n      break;\n    }\n\n    row = position.row + i;\n  }\n\n  return { ...position, row };\n};\n\nexport const nextBoard = ({ board, player, resetPlayer, addLinesCleared }) => {\n  const { tetromino, position } = player;\n\n  // Copy and clear spaces used by pieces that\n  // hadn't collided and occupied spaces permanently\n  let rows = board.rows.map((row) =>\n    row.map((cell) => (cell.occupied ? cell : { ...defaultCell }))\n  );\n\n  // Drop position\n  const dropPosition = findDropPosition({\n    board,\n    position,\n    shape: tetromino.shape\n  });\n\n  // Place ghost\n  const className = `${tetromino.className} ${\n    player.isFastDropping ? \"\" : \"ghost\"\n  }`;\n  rows = transferToBoard({\n    className,\n    isOccupied: player.isFastDropping,\n    position: dropPosition,\n    rows,\n    shape: tetromino.shape\n  });\n\n  // Place the piece.\n  // If it collided, mark the board cells as collided\n  if (!player.isFastDropping) {\n    rows = transferToBoard({\n      className: tetromino.className,\n      isOccupied: player.collided,\n      position,\n      rows,\n      shape: tetromino.shape\n    });\n  }\n\n  // Check for cleared lines\n  const blankRow = rows[0].map((_) => ({ ...defaultCell }));\n  let linesCleared = 0;\n  rows = rows.reduce((acc, row) => {\n    if (row.every((column) => column.occupied)) {\n      linesCleared++;\n      acc.unshift([...blankRow]);\n    } else {\n      acc.push(row);\n    }\n\n    return acc;\n  }, []);\n\n  if (linesCleared > 0) {\n    addLinesCleared(linesCleared);\n  }\n\n  // If we collided, reset the player!\n  if (player.collided || player.isFastDropping) {\n    resetPlayer();\n  }\n\n  // Return the next board\n  return {\n    rows,\n    size: { ...board.size }\n  };\n};\n\nexport const hasCollision = ({ board, position, shape }) => {\n  for (let y = 0; y < shape.length; y++) {\n    const row = y + position.row;\n\n    for (let x = 0; x < shape[y].length; x++) {\n      if (shape[y][x]) {\n        const column = x + position.column;\n\n        if (\n          board.rows[row] &&\n          board.rows[row][column] &&\n          board.rows[row][column].occupied\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nexport const isWithinBoard = ({ board, position, shape }) => {\n  for (let y = 0; y < shape.length; y++) {\n    const row = y + position.row;\n\n    for (let x = 0; x < shape[y].length; x++) {\n      if (shape[y][x]) {\n        const column = x + position.column;\n        const isValidPosition = board.rows[row] && board.rows[row][column];\n\n        if (!isValidPosition) return false;\n      }\n    }\n  }\n\n  return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}