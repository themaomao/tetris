{"ast":null,"code":"import _slicedToArray from\"/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useCallback,useEffect}from\"react\";var defaultDropTime=1000;var minimumDropTime=100;var speedIncrement=50;/* const defaultDropTime = 1000;里的1000系统怎么知道是1000毫秒而不是1000秒呢？\n\n在这种情况下，系统默认解释的单位是毫秒。JavaScript 中的时间单位是以毫秒为基准的，因此在这里的 1000 被解释为毫秒。如果你要指定秒数，通常会在数字后面加上 s，例如 5s 表示 5 秒。\n\n如果你在代码中使用类似于 defaultDropTime = 5s 这样的写法，JavaScript 并不会直接理解 s 代表秒，这不是 JavaScript 的标准语法。如果你想要使用秒作为单位，你需要手动将秒数转换为毫秒，例如 defaultDropTime = 5000 表示 5 秒。\n\n*/export var useDropTime=function useDropTime(_ref){var gameStats=_ref.gameStats;/*useDropTime is the selfnamed hook name */var _useState=useState(defaultDropTime),_useState2=_slicedToArray(_useState,2),dropTime=_useState2[0],setDropTime=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),previousDropTime=_useState4[0],setPreviousDropTime=_useState4[1];var resumeDropTime=useCallback(function(){if(!previousDropTime){return;}setDropTime(previousDropTime);setPreviousDropTime(null);},[previousDropTime]);var pauseDropTime=useCallback(function(){if(dropTime){setPreviousDropTime(dropTime);}setDropTime(null);},[dropTime,setPreviousDropTime]);useEffect(function(){var speed=speedIncrement*(gameStats.level-1);var newDropTime=Math.max(defaultDropTime-speed,minimumDropTime);/*Math.max() 是 JavaScript 中的一个内置函数，用于返回一组数字中的最大值。\n语法：Math.max(num1, num2, ...)。\n它可以接受任意数量的参数，每个参数都是一个数字。函数会返回这些数字中的最大值。Math.max(defaultDropTime - speed, minimumDropTime) 的作用是从 defaultDropTime - speed 和 minimumDropTime 这两个值中选取较大的值作为结果。这是为了确保计算得到的新方块下落时间间隔不会低于 minimumDropTime\n */setDropTime(newDropTime);},[gameStats.level,setDropTime]);return[dropTime,pauseDropTime,resumeDropTime];};","map":{"version":3,"names":["useState","useCallback","useEffect","defaultDropTime","minimumDropTime","speedIncrement","useDropTime","_ref","gameStats","_useState","_useState2","_slicedToArray","dropTime","setDropTime","_useState3","_useState4","previousDropTime","setPreviousDropTime","resumeDropTime","pauseDropTime","speed","level","newDropTime","Math","max"],"sources":["/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/src/Hooks/useDropTime.js"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\n\nconst defaultDropTime = 1000;\nconst minimumDropTime = 100;\nconst speedIncrement = 50;\n/* const defaultDropTime = 1000;里的1000系统怎么知道是1000毫秒而不是1000秒呢？\n\n在这种情况下，系统默认解释的单位是毫秒。JavaScript 中的时间单位是以毫秒为基准的，因此在这里的 1000 被解释为毫秒。如果你要指定秒数，通常会在数字后面加上 s，例如 5s 表示 5 秒。\n\n如果你在代码中使用类似于 defaultDropTime = 5s 这样的写法，JavaScript 并不会直接理解 s 代表秒，这不是 JavaScript 的标准语法。如果你想要使用秒作为单位，你需要手动将秒数转换为毫秒，例如 defaultDropTime = 5000 表示 5 秒。\n\n*/\n\nexport const useDropTime = ({ gameStats }) => {\n    /*useDropTime is the selfnamed hook name */\n  const [dropTime, setDropTime] = useState(defaultDropTime);\n  const [previousDropTime, setPreviousDropTime] = useState();\n\n  const resumeDropTime = useCallback(() => {\n    if (!previousDropTime) {\n      return;\n    }\n    setDropTime(previousDropTime);\n    setPreviousDropTime(null);\n  }, [previousDropTime]);\n\n  const pauseDropTime = useCallback(() => {\n    if (dropTime) {\n      setPreviousDropTime(dropTime);\n    }\n    setDropTime(null);\n  }, [dropTime, setPreviousDropTime]);\n\n  useEffect(() => {\n    const speed = speedIncrement * (gameStats.level - 1);\n    const newDropTime = Math.max(defaultDropTime - speed, minimumDropTime);\n/*Math.max() 是 JavaScript 中的一个内置函数，用于返回一组数字中的最大值。\n语法：Math.max(num1, num2, ...)。\n它可以接受任意数量的参数，每个参数都是一个数字。函数会返回这些数字中的最大值。Math.max(defaultDropTime - speed, minimumDropTime) 的作用是从 defaultDropTime - speed 和 minimumDropTime 这两个值中选取较大的值作为结果。这是为了确保计算得到的新方块下落时间间隔不会低于 minimumDropTime\n */\n    setDropTime(newDropTime);\n  }, [gameStats.level, setDropTime]);\n\n  return [dropTime, pauseDropTime, resumeDropTime];\n};\n"],"mappings":"+JAAA,OAASA,QAAQ,CAAEC,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAExD,GAAM,CAAAC,eAAe,CAAG,IAAI,CAC5B,GAAM,CAAAC,eAAe,CAAG,GAAG,CAC3B,GAAM,CAAAC,cAAc,CAAG,EAAE,CACzB;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,MAAO,IAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAAC,IAAA,CAAsB,IAAhB,CAAAC,SAAS,CAAAD,IAAA,CAATC,SAAS,CACnC,2CACF,IAAAC,SAAA,CAAgCT,QAAQ,CAACG,eAAe,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlDG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAAgDd,QAAQ,CAAC,CAAC,CAAAe,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAnDE,gBAAgB,CAAAD,UAAA,IAAEE,mBAAmB,CAAAF,UAAA,IAE5C,GAAM,CAAAG,cAAc,CAAGjB,WAAW,CAAC,UAAM,CACvC,GAAI,CAACe,gBAAgB,CAAE,CACrB,OACF,CACAH,WAAW,CAACG,gBAAgB,CAAC,CAC7BC,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAAE,CAACD,gBAAgB,CAAC,CAAC,CAEtB,GAAM,CAAAG,aAAa,CAAGlB,WAAW,CAAC,UAAM,CACtC,GAAIW,QAAQ,CAAE,CACZK,mBAAmB,CAACL,QAAQ,CAAC,CAC/B,CACAC,WAAW,CAAC,IAAI,CAAC,CACnB,CAAC,CAAE,CAACD,QAAQ,CAAEK,mBAAmB,CAAC,CAAC,CAEnCf,SAAS,CAAC,UAAM,CACd,GAAM,CAAAkB,KAAK,CAAGf,cAAc,EAAIG,SAAS,CAACa,KAAK,CAAG,CAAC,CAAC,CACpD,GAAM,CAAAC,WAAW,CAAGC,IAAI,CAACC,GAAG,CAACrB,eAAe,CAAGiB,KAAK,CAAEhB,eAAe,CAAC,CAC1E;AACA;AACA;AACA,GACIS,WAAW,CAACS,WAAW,CAAC,CAC1B,CAAC,CAAE,CAACd,SAAS,CAACa,KAAK,CAAER,WAAW,CAAC,CAAC,CAElC,MAAO,CAACD,QAAQ,CAAEO,aAAa,CAAED,cAAc,CAAC,CAClD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}