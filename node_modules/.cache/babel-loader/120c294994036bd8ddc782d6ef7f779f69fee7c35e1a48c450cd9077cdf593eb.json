{"ast":null,"code":"import { hasCollision, isWithinBoard } from \"../Business/Board\";\nimport { rotate } from \"./Tetrominoes\";\nimport { Action } from \"../Business/Input\";\nconst attemptRotation = ({\n  board,\n  player,\n  setPlayer\n}) => {\n  const shape = rotate({\n    piece: player.tetromino.shape,\n    direction: 1\n  });\n  const position = player.position;\n  const isValidRotation = isWithinBoard({\n    board,\n    position,\n    shape\n  }) && !hasCollision({\n    board,\n    position,\n    shape\n  });\n  if (isValidRotation) {\n    setPlayer({\n      ...player,\n      tetromino: {\n        ...player.tetromino,\n        shape\n      }\n    });\n  } else {\n    return false;\n  }\n};\nexport const movePlayer = ({\n  delta,\n  position,\n  shape,\n  board\n}) => {\n  const desiredNextPosition = {\n    row: position.row + delta.row,\n    column: position.column + delta.column\n  };\n  const collided = hasCollision({\n    board,\n    position: desiredNextPosition,\n    shape\n  });\n  const isOnBoard = isWithinBoard({\n    board,\n    position: desiredNextPosition,\n    shape\n  });\n  const preventMove = !isOnBoard || isOnBoard && collided;\n  const nextPosition = preventMove ? position : desiredNextPosition;\n  const isMovingDown = delta.row > 0;\n  const isHit = isMovingDown && (collided || !isOnBoard);\n  return {\n    collided: isHit,\n    nextPosition\n  };\n};\nconst attemptMovement = ({\n  board,\n  action,\n  player,\n  setPlayer,\n  setGameOver\n}) => {\n  const delta = {\n    row: 0,\n    column: 0\n  };\n  let isFastDropping = false;\n  if (action === Action.FastDrop) {\n    isFastDropping = true;\n  } else if (action === Action.SlowDrop) {\n    delta.row += 1;\n  } else if (action === Action.Left) {\n    delta.column -= 1;\n  } else if (action === Action.Right) {\n    delta.column += 1;\n  }\n  const {\n    collided,\n    nextPosition\n  } = movePlayer({\n    delta,\n    position: player.position,\n    shape: player.tetromino.shape,\n    board\n  });\n\n  // Did we collide immediately? If so, game over, man!\n  const isGameOver = collided && player.position.row === 0;\n  if (isGameOver) {\n    setGameOver(isGameOver);\n  }\n  setPlayer({\n    ...player,\n    collided,\n    isFastDropping,\n    position: nextPosition\n  });\n};\nexport const playerController = ({\n  action,\n  board,\n  player,\n  setPlayer,\n  setGameOver\n}) => {\n  if (!action) return;\n  if (action === Action.Rotate) {\n    attemptRotation({\n      board,\n      player,\n      setPlayer\n    });\n  } else {\n    attemptMovement({\n      board,\n      player,\n      setPlayer,\n      action,\n      setGameOver\n    });\n  }\n};","map":{"version":3,"names":["hasCollision","isWithinBoard","rotate","Action","attemptRotation","board","player","setPlayer","shape","piece","tetromino","direction","position","isValidRotation","movePlayer","delta","desiredNextPosition","row","column","collided","isOnBoard","preventMove","nextPosition","isMovingDown","isHit","attemptMovement","action","setGameOver","isFastDropping","FastDrop","SlowDrop","Left","Right","isGameOver","playerController","Rotate"],"sources":["/Users/maomao/tetrisprac-one-react/src/Business/PlayerController.js"],"sourcesContent":["import { hasCollision, isWithinBoard } from \"../Business/Board\";\nimport { rotate } from \"./Tetrominoes\";\nimport { Action } from \"../Business/Input\";\n\nconst attemptRotation = ({ board, player, setPlayer }) => {\n  const shape = rotate({\n    piece: player.tetromino.shape,\n    direction: 1\n  });\n\n  const position = player.position;\n  const isValidRotation =\n    isWithinBoard({ board, position, shape }) &&\n    !hasCollision({ board, position, shape });\n\n  if (isValidRotation) {\n    setPlayer({\n      ...player,\n      tetromino: {\n        ...player.tetromino,\n        shape\n      }\n    });\n  } else {\n    return false;\n  }\n};\n\nexport const movePlayer = ({ delta, position, shape, board }) => {\n  const desiredNextPosition = {\n    row: position.row + delta.row,\n    column: position.column + delta.column\n  };\n\n  const collided = hasCollision({\n    board,\n    position: desiredNextPosition,\n    shape\n  });\n\n  const isOnBoard = isWithinBoard({\n    board,\n    position: desiredNextPosition,\n    shape\n  });\n\n  const preventMove = !isOnBoard || (isOnBoard && collided);\n  const nextPosition = preventMove ? position : desiredNextPosition;\n\n  const isMovingDown = delta.row > 0;\n  const isHit = isMovingDown && (collided || !isOnBoard);\n\n  return { collided: isHit, nextPosition };\n};\n\nconst attemptMovement = ({ board, action, player, setPlayer, setGameOver }) => {\n  const delta = { row: 0, column: 0 };\n  let isFastDropping = false;\n\n  if (action === Action.FastDrop) {\n    isFastDropping = true;\n  } else if (action === Action.SlowDrop) {\n    delta.row += 1;\n  } else if (action === Action.Left) {\n    delta.column -= 1;\n  } else if (action === Action.Right) {\n    delta.column += 1;\n  }\n\n  const { collided, nextPosition } = movePlayer({\n    delta,\n    position: player.position,\n    shape: player.tetromino.shape,\n    board\n  });\n\n  // Did we collide immediately? If so, game over, man!\n  const isGameOver = collided && player.position.row === 0;\n  if (isGameOver) {\n    setGameOver(isGameOver);\n  }\n\n  setPlayer({\n    ...player,\n    collided,\n    isFastDropping,\n    position: nextPosition\n  });\n};\n\nexport const playerController = ({\n  action,\n  board,\n  player,\n  setPlayer,\n  setGameOver\n}) => {\n  if (!action) return;\n\n  if (action === Action.Rotate) {\n    attemptRotation({ board, player, setPlayer });\n  } else {\n    attemptMovement({ board, player, setPlayer, action, setGameOver });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}