{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst buildGameStats = () => ({\n  level: 1,\n  linesCompleted: 0,\n  linesPerLevel: 10,\n  points: 0\n});\nexport const useGameStats = () => {\n  _s();\n  const [gameStats, setGameStats] = useState(buildGameStats());\n  const addLinesCleared = useCallback(lines => {\n    setGameStats(previous => {\n      const points = previous.points + lines * 100;\n      const {\n        linesPerLevel\n      } = previous;\n      const newLinesCompleted = previous.linesCompleted + lines;\n      const level = newLinesCompleted >= linesPerLevel ? previous.level + 1 : previous.level;\n      const linesCompleted = newLinesCompleted % linesPerLevel;\n      return {\n        level,\n        linesCompleted,\n        linesPerLevel,\n        points\n      };\n    }, []);\n  }, []);\n  return [gameStats, addLinesCleared];\n};\n_s(useGameStats, \"LdK6zoaIH+XjNjy8gCr4UB1bMlc=\");","map":{"version":3,"names":["useState","useCallback","buildGameStats","level","linesCompleted","linesPerLevel","points","useGameStats","_s","gameStats","setGameStats","addLinesCleared","lines","previous","newLinesCompleted"],"sources":["/Users/maomao/tetrisprac-one-react/src/Hooks/useGameStats.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst buildGameStats = () => ({\n  level: 1,\n  linesCompleted: 0,\n  linesPerLevel: 10,\n  points: 0\n});\n\nexport const useGameStats = () => {\n  const [gameStats, setGameStats] = useState(buildGameStats());\n\n  const addLinesCleared = useCallback((lines) => {\n    setGameStats((previous) => {\n      const points = previous.points + lines * 100;\n      const { linesPerLevel } = previous;\n      const newLinesCompleted = previous.linesCompleted + lines;\n      const level =\n        newLinesCompleted >= linesPerLevel\n          ? previous.level + 1\n          : previous.level;\n      const linesCompleted = newLinesCompleted % linesPerLevel;\n\n      return {\n        level,\n        linesCompleted,\n        linesPerLevel,\n        points\n      };\n    }, []);\n  }, []);\n\n  return [gameStats, addLinesCleared];\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,cAAc,GAAGA,CAAA,MAAO;EAC5BC,KAAK,EAAE,CAAC;EACRC,cAAc,EAAE,CAAC;EACjBC,aAAa,EAAE,EAAE;EACjBC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACE,cAAc,CAAC,CAAC,CAAC;EAE5D,MAAMS,eAAe,GAAGV,WAAW,CAAEW,KAAK,IAAK;IAC7CF,YAAY,CAAEG,QAAQ,IAAK;MACzB,MAAMP,MAAM,GAAGO,QAAQ,CAACP,MAAM,GAAGM,KAAK,GAAG,GAAG;MAC5C,MAAM;QAAEP;MAAc,CAAC,GAAGQ,QAAQ;MAClC,MAAMC,iBAAiB,GAAGD,QAAQ,CAACT,cAAc,GAAGQ,KAAK;MACzD,MAAMT,KAAK,GACTW,iBAAiB,IAAIT,aAAa,GAC9BQ,QAAQ,CAACV,KAAK,GAAG,CAAC,GAClBU,QAAQ,CAACV,KAAK;MACpB,MAAMC,cAAc,GAAGU,iBAAiB,GAAGT,aAAa;MAExD,OAAO;QACLF,KAAK;QACLC,cAAc;QACdC,aAAa;QACbC;MACF,CAAC;IACH,CAAC,EAAE,EAAE,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACG,SAAS,EAAEE,eAAe,CAAC;AACrC,CAAC;AAACH,EAAA,CAxBWD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}