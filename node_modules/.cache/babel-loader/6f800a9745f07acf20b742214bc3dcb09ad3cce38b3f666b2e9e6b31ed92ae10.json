{"ast":null,"code":"import{useEffect,useRef}from\"react\";// Custom hook by Dan Abramov\nexport var useInterval=function useInterval(callback,delay){var savedCallback=useRef();// Remember the latest callback\nuseEffect(function(){savedCallback.current=callback;},[callback]);// Set up the interval\nuseEffect(function(){function tick(){savedCallback.current();}if(delay!==null){var id=setInterval(tick,delay);return function(){clearInterval(id);};}},[delay]);};","map":{"version":3,"names":["useEffect","useRef","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval"],"sources":["/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/src/Hooks/useInterval.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\n// Custom hook by Dan Abramov\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n};\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEzC;AACA,MAAO,IAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,QAAQ,CAAEC,KAAK,CAAK,CAC9C,GAAM,CAAAC,aAAa,CAAGJ,MAAM,CAAC,CAAC,CAE9B;AACAD,SAAS,CAAC,UAAM,CACdK,aAAa,CAACC,OAAO,CAAGH,QAAQ,CAClC,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd;AACAH,SAAS,CAAC,UAAM,CACd,QAAS,CAAAO,IAAIA,CAAA,CAAG,CACdF,aAAa,CAACC,OAAO,CAAC,CAAC,CACzB,CACA,GAAIF,KAAK,GAAK,IAAI,CAAE,CAClB,GAAM,CAAAI,EAAE,CAAGC,WAAW,CAACF,IAAI,CAAEH,KAAK,CAAC,CACnC,MAAO,WAAM,CACXM,aAAa,CAACF,EAAE,CAAC,CACnB,CAAC,CACH,CACF,CAAC,CAAE,CAACJ,KAAK,CAAC,CAAC,CACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}