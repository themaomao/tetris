{"ast":null,"code":"const className = \"tetromino\";\nexport const TETROMINOES = {\n  I: {\n    shape: [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]],\n    className: `${className} ${className}__i`\n  },\n  J: {\n    shape: [[0, 1, 0], [0, 1, 0], [1, 1, 0]],\n    className: `${className} ${className}__j`\n  },\n  L: {\n    shape: [[0, 1, 0], [0, 1, 0], [0, 1, 1]],\n    className: `${className} ${className}__l`\n  },\n  O: {\n    shape: [[1, 1], [1, 1]],\n    className: `${className} ${className}__o`\n  },\n  S: {\n    shape: [[0, 1, 1], [1, 1, 0], [0, 0, 0]],\n    className: `${className} ${className}__s`\n  },\n  T: {\n    shape: [[1, 1, 1], [0, 1, 0], [0, 0, 0]],\n    className: `${className} ${className}__t`\n  },\n  Z: {\n    shape: [[1, 1, 0], [0, 1, 1], [0, 0, 0]],\n    className: `${className} ${className}__z`\n  }\n};\nexport const randomTetromino = () => {\n  const keys = Object.keys(TETROMINOES);\n  const index = Math.floor(Math.random() * keys.length);\n  const key = keys[index];\n  return TETROMINOES[key];\n};\nexport const rotate = ({\n  piece,\n  direction\n}) => {\n  // Transpose rows and columns\n  const newPiece = piece.map((_, index) => piece.map(column => column[index]));\n\n  // Reverse rows to get a rotated matrix\n  if (direction > 0) return newPiece.map(row => row.reverse());\n  return newPiece.reverse();\n};\nexport const transferToBoard = ({\n  className,\n  isOccupied,\n  position,\n  rows,\n  shape\n}) => {\n  shape.forEach((row, y) => {\n    row.forEach((cell, x) => {\n      if (cell) {\n        const occupied = isOccupied;\n        const _y = y + position.row;\n        const _x = x + position.column;\n        rows[_y][_x] = {\n          occupied,\n          className\n        };\n      }\n    });\n  });\n  return rows;\n};","map":{"version":3,"names":["className","TETROMINOES","I","shape","J","L","O","S","T","Z","randomTetromino","keys","Object","index","Math","floor","random","length","key","rotate","piece","direction","newPiece","map","_","column","row","reverse","transferToBoard","isOccupied","position","rows","forEach","y","cell","x","occupied","_y","_x"],"sources":["/Users/maomao/tetrisprac-one-react/src/Business/Tetrominoes.js"],"sourcesContent":["const className = \"tetromino\";\n\nexport const TETROMINOES = {\n  I: {\n    shape: [\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0]\n    ],\n    className: `${className} ${className}__i`\n  },\n  J: {\n    shape: [\n      [0, 1, 0],\n      [0, 1, 0],\n      [1, 1, 0]\n    ],\n    className: `${className} ${className}__j`\n  },\n  L: {\n    shape: [\n      [0, 1, 0],\n      [0, 1, 0],\n      [0, 1, 1]\n    ],\n    className: `${className} ${className}__l`\n  },\n  O: {\n    shape: [\n      [1, 1],\n      [1, 1]\n    ],\n    className: `${className} ${className}__o`\n  },\n  S: {\n    shape: [\n      [0, 1, 1],\n      [1, 1, 0],\n      [0, 0, 0]\n    ],\n    className: `${className} ${className}__s`\n  },\n  T: {\n    shape: [\n      [1, 1, 1],\n      [0, 1, 0],\n      [0, 0, 0]\n    ],\n    className: `${className} ${className}__t`\n  },\n  Z: {\n    shape: [\n      [1, 1, 0],\n      [0, 1, 1],\n      [0, 0, 0]\n    ],\n    className: `${className} ${className}__z`\n  }\n};\n\nexport const randomTetromino = () => {\n  const keys = Object.keys(TETROMINOES);\n  const index = Math.floor(Math.random() * keys.length);\n  const key = keys[index];\n  return TETROMINOES[key];\n};\n\nexport const rotate = ({ piece, direction }) => {\n  // Transpose rows and columns\n  const newPiece = piece.map((_, index) =>\n    piece.map((column) => column[index])\n  );\n\n  // Reverse rows to get a rotated matrix\n  if (direction > 0) return newPiece.map((row) => row.reverse());\n\n  return newPiece.reverse();\n};\n\nexport const transferToBoard = ({\n  className,\n  isOccupied,\n  position,\n  rows,\n  shape\n}) => {\n  shape.forEach((row, y) => {\n    row.forEach((cell, x) => {\n      if (cell) {\n        const occupied = isOccupied;\n        const _y = y + position.row;\n        const _x = x + position.column;\n        rows[_y][_x] = { occupied, className };\n      }\n    });\n  });\n\n  return rows;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}