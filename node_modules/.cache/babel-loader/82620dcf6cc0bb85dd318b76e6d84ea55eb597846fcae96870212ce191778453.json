{"ast":null,"code":"var _jsxFileName = \"/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/src/Components/Preview.js\";\nimport \"./Preview.css\";\nimport React from \"react\";\nimport { buildBoard } from \"../Business/Board\";\nimport { transferToBoard } from \"../Business/Tetrominoes\";\nimport BoardCell from \"../Components/BoardCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview = ({\n  tetromino,\n  index\n}) => {\n  const {\n    shape,\n    className\n  } = tetromino;\n  const board = buildBoard({\n    rows: 4,\n    columns: 4\n  });\n  const style = {\n    top: `${index * 15}vw`\n  };\n  board.rows = transferToBoard({\n    className,\n    isOccupied: false,\n    position: {\n      row: 0,\n      column: 0\n    },\n    rows: board.rows,\n    shape\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Preview\",\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Preview-board\",\n      children: board.rows.map((row, y) => row.map((cell, x) => /*#__PURE__*/_jsxDEV(BoardCell, {\n        cell: cell\n      }, x * board.size.columns + x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Preview;\nexport default _c2 = /*#__PURE__*/React.memo(Preview);\nvar _c, _c2;\n$RefreshReg$(_c, \"Preview\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","buildBoard","transferToBoard","BoardCell","jsxDEV","_jsxDEV","Preview","tetromino","index","shape","className","board","rows","columns","style","top","isOccupied","position","row","column","children","map","y","cell","x","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/src/Components/Preview.js"],"sourcesContent":["import \"./Preview.css\";\nimport React from \"react\";\n\nimport { buildBoard } from \"../Business/Board\";\nimport { transferToBoard } from \"../Business/Tetrominoes\";\n\nimport BoardCell from \"../Components/BoardCell\";\n\nconst Preview = ({ tetromino, index }) => {\n  const { shape, className } = tetromino;\n\n  const board = buildBoard({ rows: 4, columns: 4 });\n\n  const style = { top: `${index * 15}vw` };\n\n  board.rows = transferToBoard({\n    className,\n    isOccupied: false,\n    position: { row: 0, column: 0 },\n    rows: board.rows,\n    shape\n  });\n\n  return (\n    <div className=\"Preview\" style={style}>\n      <div className=\"Preview-board\">\n        {board.rows.map((row, y) =>\n          row.map((cell, x) => (\n            <BoardCell key={x * board.size.columns + x} cell={cell} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Preview);"],"mappings":";AAAA,OAAO,eAAe;AACtB,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,eAAe,QAAQ,yBAAyB;AAEzD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EACxC,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGH,SAAS;EAEtC,MAAMI,KAAK,GAAGV,UAAU,CAAC;IAAEW,IAAI,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EAEjD,MAAMC,KAAK,GAAG;IAAEC,GAAG,EAAG,GAAEP,KAAK,GAAG,EAAG;EAAI,CAAC;EAExCG,KAAK,CAACC,IAAI,GAAGV,eAAe,CAAC;IAC3BQ,SAAS;IACTM,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IAC/BP,IAAI,EAAED,KAAK,CAACC,IAAI;IAChBH;EACF,CAAC,CAAC;EAEF,oBACEJ,OAAA;IAAKK,SAAS,EAAC,SAAS;IAACI,KAAK,EAAEA,KAAM;IAAAM,QAAA,eACpCf,OAAA;MAAKK,SAAS,EAAC,eAAe;MAAAU,QAAA,EAC3BT,KAAK,CAACC,IAAI,CAACS,GAAG,CAAC,CAACH,GAAG,EAAEI,CAAC,KACrBJ,GAAG,CAACG,GAAG,CAAC,CAACE,IAAI,EAAEC,CAAC,kBACdnB,OAAA,CAACF,SAAS;QAAkCoB,IAAI,EAAEA;MAAK,GAAvCC,CAAC,GAAGb,KAAK,CAACc,IAAI,CAACZ,OAAO,GAAGW,CAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC1D,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BIxB,OAAO;AA4Bb,eAAAyB,GAAA,gBAAe/B,KAAK,CAACgC,IAAI,CAAC1B,OAAO,CAAC;AAAC,IAAAwB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}