{"ast":null,"code":"import _slicedToArray from\"/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Menu from\"./Menu\";import Tetris from\"./Tetris\";import{useGameOver}from\"../Hooks/useGameOver\";import{jsx as _jsx}from\"react/jsx-runtime\";var Game=function Game(_ref){var rows=_ref.rows,columns=_ref.columns;var _useGameOver=useGameOver(),_useGameOver2=_slicedToArray(_useGameOver,3),gameOver=_useGameOver2[0],setGameOver=_useGameOver2[1],resetGameover=_useGameOver2[2];/* const [gameOver, setGameOver, resetGameover] = useGameOver();\n和\n const [gameOver, setGameOver] = useGameOver();\n中有什么不同？\n\n综合起来，两者的区别在于第一个代码行多了一个变量 resetGameover，\n它可能用于执行某些重置游戏状态的操作，而第二个代码行只关注了游戏状态的\n获取和设置。具体的功能取决于 useGameOver() 函数的实现。*/var start=function start(){return resetGameover();};return/*#__PURE__*/_jsx(\"div\",{className:\"Game\",children:gameOver?/*#__PURE__*/_jsx(Menu,{onClick:start}):/*#__PURE__*/_jsx(Tetris,{rows:rows,columns:columns,setGameOver:setGameOver})});};export default Game;","map":{"version":3,"names":["Menu","Tetris","useGameOver","jsx","_jsx","Game","_ref","rows","columns","_useGameOver","_useGameOver2","_slicedToArray","gameOver","setGameOver","resetGameover","start","className","children","onClick"],"sources":["/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/src/Components/Game.js"],"sourcesContent":["import Menu from \"./Menu\";\nimport Tetris from \"./Tetris\";\nimport { useGameOver } from \"../Hooks/useGameOver\";\n\nconst Game = ({ rows, columns }) => {\n    const [gameOver, setGameOver, resetGameover] = useGameOver();\n    /* const [gameOver, setGameOver, resetGameover] = useGameOver();\n和\n const [gameOver, setGameOver] = useGameOver();\n中有什么不同？\n\n综合起来，两者的区别在于第一个代码行多了一个变量 resetGameover，\n它可能用于执行某些重置游戏状态的操作，而第二个代码行只关注了游戏状态的\n获取和设置。具体的功能取决于 useGameOver() 函数的实现。*/ \nconst start = () => resetGameover();\n\nreturn (\n    <div className=\"Game\">\n        {gameOver ? (\n            <Menu onClick={start} />\n        ) : (\n            <Tetris rows={rows} columns = {columns} setGameOver={setGameOver} />\n         )}\n    </div>\n);\n};\nexport default Game;"],"mappings":"+JAAA,MAAO,CAAAA,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,OAASC,WAAW,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,GAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAAC,IAAA,CAA0B,IAApB,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CAAEC,OAAO,CAAAF,IAAA,CAAPE,OAAO,CACzB,IAAAC,YAAA,CAA+CP,WAAW,CAAC,CAAC,CAAAQ,aAAA,CAAAC,cAAA,CAAAF,YAAA,IAArDG,QAAQ,CAAAF,aAAA,IAAEG,WAAW,CAAAH,aAAA,IAAEI,aAAa,CAAAJ,aAAA,IAC3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,qCACA,GAAM,CAAAK,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAA,QAAS,CAAAD,aAAa,CAAC,CAAC,GAEnC,mBACIV,IAAA,QAAKY,SAAS,CAAC,MAAM,CAAAC,QAAA,CAChBL,QAAQ,cACLR,IAAA,CAACJ,IAAI,EAACkB,OAAO,CAAEH,KAAM,CAAE,CAAC,cAExBX,IAAA,CAACH,MAAM,EAACM,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAIA,OAAQ,CAACK,WAAW,CAAEA,WAAY,CAAE,CACrE,CACD,CAAC,CAEV,CAAC,CACD,cAAe,CAAAR,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}