{"ast":null,"code":"import _slicedToArray from\"/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useCallback}from\"react\";var buildGameStats=function buildGameStats(){return{level:1,linesCompleted:0,linesPerLevel:10,points:0};};export var useGameStats=function useGameStats(){var _useState=useState(buildGameStats()),_useState2=_slicedToArray(_useState,2),gameStats=_useState2[0],setGameStats=_useState2[1];var addLinesCleared=useCallback(function(lines){setGameStats(function(previous){var points=previous.points+lines*100;var linesPerLevel=previous.linesPerLevel;var newLinesCompleted=previous.linesCompleted+lines;var level=newLinesCompleted>=linesPerLevel?previous.level+1:previous.level;var linesCompleted=newLinesCompleted%linesPerLevel;return{level:level,linesCompleted:linesCompleted,linesPerLevel:linesPerLevel,points:points};},[]);},[]);return[gameStats,addLinesCleared];};","map":{"version":3,"names":["useState","useCallback","buildGameStats","level","linesCompleted","linesPerLevel","points","useGameStats","_useState","_useState2","_slicedToArray","gameStats","setGameStats","addLinesCleared","lines","previous","newLinesCompleted"],"sources":["/Volumes/React Project/All Project/All React Project/tetrisprac-one-react/src/Hooks/useGameStats.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst buildGameStats = () => ({\n  level: 1,\n  linesCompleted: 0,\n  linesPerLevel: 10,\n  points: 0\n});\n\nexport const useGameStats = () => {\n  const [gameStats, setGameStats] = useState(buildGameStats());\n\n  const addLinesCleared = useCallback((lines) => {\n    setGameStats((previous) => {\n      const points = previous.points + lines * 100;\n      const { linesPerLevel } = previous;\n      const newLinesCompleted = previous.linesCompleted + lines;\n      const level =\n        newLinesCompleted >= linesPerLevel\n          ? previous.level + 1\n          : previous.level;\n      const linesCompleted = newLinesCompleted % linesPerLevel;\n\n      return {\n        level,\n        linesCompleted,\n        linesPerLevel,\n        points\n      };\n    }, []);\n  }, []);\n\n  return [gameStats, addLinesCleared];\n};"],"mappings":"+JAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAE7C,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,QAAU,CAC5BC,KAAK,CAAE,CAAC,CACRC,cAAc,CAAE,CAAC,CACjBC,aAAa,CAAE,EAAE,CACjBC,MAAM,CAAE,CACV,CAAC,EAAC,CAEF,MAAO,IAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CAChC,IAAAC,SAAA,CAAkCR,QAAQ,CAACE,cAAc,CAAC,CAAC,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArDG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B,GAAM,CAAAI,eAAe,CAAGZ,WAAW,CAAC,SAACa,KAAK,CAAK,CAC7CF,YAAY,CAAC,SAACG,QAAQ,CAAK,CACzB,GAAM,CAAAT,MAAM,CAAGS,QAAQ,CAACT,MAAM,CAAGQ,KAAK,CAAG,GAAG,CAC5C,GAAQ,CAAAT,aAAa,CAAKU,QAAQ,CAA1BV,aAAa,CACrB,GAAM,CAAAW,iBAAiB,CAAGD,QAAQ,CAACX,cAAc,CAAGU,KAAK,CACzD,GAAM,CAAAX,KAAK,CACTa,iBAAiB,EAAIX,aAAa,CAC9BU,QAAQ,CAACZ,KAAK,CAAG,CAAC,CAClBY,QAAQ,CAACZ,KAAK,CACpB,GAAM,CAAAC,cAAc,CAAGY,iBAAiB,CAAGX,aAAa,CAExD,MAAO,CACLF,KAAK,CAALA,KAAK,CACLC,cAAc,CAAdA,cAAc,CACdC,aAAa,CAAbA,aAAa,CACbC,MAAM,CAANA,MACF,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CACR,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAACK,SAAS,CAAEE,eAAe,CAAC,CACrC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}